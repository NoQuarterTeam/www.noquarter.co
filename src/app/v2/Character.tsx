/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/character.glb -o src/components/Character.jsx -r public
*/

import { useAnimations, useGLTF } from "@react-three/drei"
import type { GroupProps } from "@react-three/fiber"
import React, { useEffect, useRef } from "react"
import type { Group, Object3DEventMap } from "three"

export function Character({ animation, ...props }: GroupProps & { animation: string }) {
  const group = useRef<Group<Object3DEventMap>>(null)
  const { nodes, materials, animations } = useGLTF("/models/character.glb")
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions?.[animation]?.reset().fadeIn(0.24).play()
    return () => {
      actions?.[animation]?.fadeOut(0.24)
    }
  }, [animation, actions])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="fall_guys">
          <primitive object={nodes._rootJoint} />
          <skinnedMesh
            name="body"
            // @ts-ignore
            geometry={nodes.body.geometry}
            material={materials.Material}
            // @ts-ignore
            skeleton={nodes.body.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="eye"
            // @ts-ignore
            geometry={nodes.eye.geometry}
            material={materials.Material}
            // @ts-ignore
            skeleton={nodes.eye.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="hand-"
            // @ts-ignore
            geometry={nodes["hand-"].geometry}
            material={materials.Material}
            // @ts-ignore
            skeleton={nodes["hand-"].skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="leg"
            // @ts-ignore
            geometry={nodes.leg.geometry}
            material={materials.Material}
            // @ts-ignore
            skeleton={nodes.leg.skeleton}
            castShadow
            receiveShadow
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("/models/character.glb")
